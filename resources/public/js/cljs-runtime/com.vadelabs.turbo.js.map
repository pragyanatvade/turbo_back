{"version":3,"sources":["com/vadelabs/turbo.cljs"],"mappings":"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","names":["js/Symbol","cljs.core/PROTOCOL_SENTINEL","sym","writer","_","cljs.core/-write","com.vadelabs.turbo/Fragment","js/module$node_modules$react$index.Fragment","com.vadelabs.turbo/Suspense","js/module$node_modules$react$index.Suspense","com.vadelabs.turbo/create-element","js/module$node_modules$react$index.createElement","com.vadelabs.turbo/create-context","js/module$node_modules$react$index.createContext","com.vadelabs.turbo/get-react","js/module$node_modules$react$index","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","com.vadelabs.turbo/$","seq54509","G__54510","cljs.core/first","cljs.core/next","self__4723__auto__","type","args","?props","?children","cljs.core/rest","native?","or__4126__auto__","cljs.core/Keyword","cljs.core/meta","type'","cljs.core/name","cljs.core/map?","cljs.core.apply","com.vadelabs.turbo.props._native_props","com.vadelabs.turbo.props._props","com$vadelabs$turbo$IExtractType$_type$dyn","x__4428__auto__","m__4429__auto__","com.vadelabs.turbo/-type","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","com.vadelabs.turbo/IExtractType","factory","com.vadelabs.turbo/type","com.vadelabs.turbo/factory","x54511","com.vadelabs.turbo/cljs-factory","props","cljs.core.dissoc","cljs.core.get","js/undefined","x54512","com.vadelabs.turbo/assoc-some","m","k","x","cljs.core.assoc","com.vadelabs.turbo/extract-cljs-props","o","goog/DEBUG","cljs.core.ex_info","temp__5733__auto__","goog.object/get","cljs_bean.core.bean","G__54514","com.vadelabs.turbo/memo","js/Error","component","com.vadelabs.turbo.memo","compare","js/module$node_modules$react$index.memo","o'","G__54515","G__54516","com.vadelabs.turbo/register!","id","js/window","com.vadelabs.turbo/signature!"],"sourcesContent":["(ns com.vadelabs.turbo\n  (:refer-clojure :exclude [type])\n  (:require\n   [goog.object :as gobj]\n   [\"react\" :as react]\n   [cljs-bean.core :as bean]\n   [com.vadelabs.turbo.props :as turbo.props])\n  (:require-macros [com.vadelabs.turbo]))\n\n(when (exists? js/Symbol)\n  (extend-protocol IPrintWithWriter\n    js/Symbol\n    (-pr-writer [sym writer _]\n      (-write writer (str \"\\\"\" (.toString sym) \"\\\"\")))))\n\n(def Fragment react/Fragment)\n\n(def Suspense react/Suspense)\n\n(def create-element react/createElement)\n\n(def create-context react/createContext)\n\n(defn ^js/React get-react [] react)\n\n(defn $\n  \"Create a new react element from a valid react type.\"\n  [type & args]\n  (let [?props    (first args)\n        ?children (rest args)\n        native?   (or (keyword? type)\n                      (string? type)\n                      (:native (meta type)))\n        type'     (if (keyword? type)\n                    (name type)\n                    type)]\n    (if (map? ?props)\n      (apply create-element\n             type'\n             (if native?\n               (turbo.props/-native-props ?props)\n               (turbo.props/-props ?props))\n             ?children)\n      (apply create-element\n             type'\n             nil\n             args))))\n\n\n(comment\n\n  ($ \"div\" \"asdfgh\")\n\n  )\n\n(defprotocol IExtractType\n  (-type [factory] \"Extracts the underlying type from the factory function.\"))\n\n(defn type\n  [factory]\n  (-type factory))\n\n(defn factory\n  \"Creates a factory function for a react component\"\n  [type]\n  (-> (fn factory [& args]\n        (apply $ type args))\n      (specify! IExtractType\n        (-type [_] type))))\n\n\n(defn cljs-factory\n  [type]\n  (-> (fn factory [& args]\n        (if (map? (first args))\n          (let [props (first args)]\n            (apply react/createElement\n                   type\n                   #js {\"turbo/props\"\n                        (dissoc props\n                                :key\n                                :ref)\n                        \"key\" (get props :key js/undefined)\n                        \"ref\" (get props :ref js/undefined)}\n                   (rest args)))\n          (apply react/createElement\n                 type\n                 #js {}\n                 args)))\n      (specify! IExtractType\n        (-type [_] type))))\n\n(defn- assoc-some\n  [m k x]\n  (if (some? x)\n    (assoc m k x)\n    m))\n\n(defn- extract-cljs-props\n  [o]\n  (when (and ^boolean goog/DEBUG (or (map? o) (nil? o)))\n    (throw (ex-info \"Props received were a map. This probably means you're calling your component as a function.\" {:props o})))\n  (if-let [props (gobj/get o \"turbo/props\")]\n    (assoc-some props :children (gobj/get o \"children\"))\n    (bean/bean o)))\n\n(defn memo\n  \"Like React.memo, but passes props as CLJS map-likes instead of JS objects.\"\n  ([component] (memo component))\n  ([component compare]\n   (react/memo\n     component\n     (fn memo-compare\n       [o o']\n       (compare\n         (extract-cljs-props o)\n         (extract-cljs-props o'))))))\n\n(defn register!\n  \"Registers a component with the React Fresh runtime.\n  `type` the component function, and `id` is the unique ID assigned to it\n  (e.g. component name) for cache invalidation.\"\n  [type id]\n  (when (exists? (.-$$Register$$ js/window))\n    (.$$Register$$ js/window type id)))\n\n(defn signature!\n  []\n  (and (exists? (._$$Signature$$ js/window))\n       (.$$Signature$$ js/window)))\n"]}